version: '3.9'

services:
  db:
    image: postgres:15-alpine
    container_name: jobops_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - jobops_network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: jobops_rabbitmq
    env_file:
      - .env
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - jobops_network

  redis:
    image: redis:7-alpine
    container_name: jobops_redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - jobops_network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: jobops_mailhog
    ports:
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
      - "${MAILHOG_UI_PORT:-8025}:8025"
    networks:
      - jobops_network

  api:
    build: .
    container_name: jobops_api
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "${API_PORT:-8000}:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - jobops_network

  celery:
    build: .
    container_name: jobops_celery
    command: celery -A jobOps worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
      - redis
      - api
    networks:
      - jobops_network

  celery-beat:
    build: .
    container_name: jobops_celery_beat
    command: celery -A jobOps beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
      - redis
      - api
    networks:
      - jobops_network

volumes:
  postgres_data:

networks:
  jobops_network:
    driver: bridge